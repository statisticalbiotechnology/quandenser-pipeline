// Needed for singularity //
singularity.autoMounts=true
// Whitelist some environment variables to use in Nextflow
singularity.envWhitelist=['USER','WINE_TMPDIR']

// Random hash to use in nextflow //
params.random_hash="qwerty"

// Required if not msconvert or quandenser workflow //
params.db=""

// Required inputs //
params.output_path=""
params.batch_file=""

// Custom mounts //
params.custom_mounts=""

// Parallelization of nextflow pipeline //
params.parallel_quandenser=true
params.parallel_maracluster=true
params.parallel_msconvert_max_forks=2
params.parallel_quandenser_max_forks=2
params.parallel_maracluster_max_forks=2
params.parallel_boxcar_max_forks=2
params.parallel_quandenser_tree=true

// Choosing workflow (Full, Quandenser or MSconvert) //
params.workflow="Quandenser"

// Advanced Settings //

// MSconvert
params.msconvert_additional_arguments=""
params.publish_msconvert=true

// Boxcar convert
params.boxcar_convert=false
params.boxcar_convert_additional_arguments=""
params.publish_boxcar_convert=true

// Quandenser
params.quandenser_additional_arguments=""
params.publish_quandenser=true

// Crux
params.precursor_window=20.0
params.missed_cleavages=2
params.mods_spec="2M+15.9949"
params.crux_index_additional_arguments=""
params.crux_search_additional_arguments=""
params.crux_percolator_additional_arguments=""
params.publish_crux=true

// Triqler
params.fold_change_eval=0.8
params.triqler_additional_arguments=""
params.publish_triqler=true

// Quandenser-pipeline
params.resume_directory=""
params.output_label=""
params.email=""
params.sendfiles=true

// Profiles //
profiles {

    local {
        process.executor="local"
    }

    cluster {
        process.executor="slurm"
        process.clusterOptions="-A <ACCOUNT>"
        process.queue="core"

        process {
            withName: msconvert {
                cpus=8
                time="20m"
            }
        }
        process {
            withName: boxcar_convert {
                cpus=10
                time="3h"
            }
        }
        process {
            withName: quandenser {
                cpus=8
                time="3h"
            }
        }
        process {
            withName: quandenser_parallel_1_dinosaur {
                cpus=4
                time="15m"
            }
        }
        process {
            withName: quandenser_parallel_2_maracluster {
                cpus=8
                time="2h"
            }
        }
        process {
            withName: quandenser_parallel_2_maracluster_parallel_1_index {
                cpus=8
                time="2h"
            }
        }
        process {
            withName: quandenser_parallel_2_maracluster_parallel_2_pvalue {
                cpus=8
                time="1h"
            }
        }
        process {
            withName: quandenser_parallel_2_maracluster_parallel_3_overlap {
                cpus=8
                time="1h"
            }
        }
        process {
            withName: quandenser_parallel_2_maracluster_parallel_4_cluster {
                cpus=8
                time="2h"
            }
        }
        process {
            withName: quandenser_parallel_3_match_features {
                cpus=4
                time="1h"
            }
        }
        process {
            withName: quandenser_parallel_4_consensus {
                cpus=8
                time="3h"
            }
        }
        process {
            withName: quandenser_parallel_4_consensus_parallel_1_index {
                cpus=8
                time="2h"
            }
        }
        process {
            withName: quandenser_parallel_4_consensus_parallel_2_pvalue {
                cpus=8
                time="1h"
            }
        }
        process {
            withName: quandenser_parallel_4_consensus_parallel_3_overlap {
                cpus=8
                time="1h"
            }
        }
        process {
            withName: quandenser_parallel_4_consensus_parallel_4_cluster {
                cpus=8
                time="2h"
            }
        }
        process {
            withName: tide_search {
                cpus=2
                time="20m"
            }
        }
        process {
            withName: triqler {
                cpus=20
                time="30m"
            }
        }
    }
}

mail {
    smtp.host="smtp.gmail.com"
    smtp.port=587
    smtp.user=params.email
    smtp.password=""
    smtp.auth=true
    smtp.starttls.enable=true
    smtp.starttls.required=true
}
